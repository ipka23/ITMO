r'''
Задание:
Вам необходимо написать регулярное выражение, которое будет проверять
правильность формата cron-выражений. Cron-выражение состоит из пяти полей,
разделённых пробелами, и может включать следующие элементы:
1. Минуты: от 0 до 59
2. Часы: от 0 до 23
3. Дни месяца: от 1 до 31
4. Месяцы: от 1 до 12 или названия месяцев (jan, feb, mar и т.д.)
5. Дни недели: от 0 до 6 (где 0 — воскресенье) или названия дней (sun, mon, tue и т.д.)
Пример cron-выражений:
- 30 14 * * * (в 14:30 каждый день)
- */5 * * * * (каждые 5 минут)
- 0 0 1 1 * (в полночь 1 января)

Решение: 1.
1. Минуты: от 0 до 59       ([0-9](/[0-9]+)?|[1-5][0-9](/[0-9]+)?|(([0-9]\b|[1-5][0-9])[-]([0-9]\b|[1-5][0-9]))?|([0-9]\b|[1-5][0-9])(?:,([0-9]\b|[1-5][0-9]))+|\*(/[0-9]+)?)
2. Часы: от 0 до 23         ([0-9](/[0-9]+)?|1[0-9](/[0-9]+)?|2[0-3](/[0-9]+)?|(([0-9]\b|1[0-9]|2[0-3])[-]([0-9]\b|1[0-9]|2[0-3]))?|([0-9]|1[0-9]|2[0-3])(?:,([0-9]\b|1[0-9]|2[0-3])){0,22}|\*(/[0-9]+)?)
3. Дни месяца: от 1 до 31   ([1-9](/[0-9]+)?|1[0-9](/[0-9]+)?|2[0-9](/[0-9]+)?|3[0-1](/[0-9]+)?|(([1-9]|1[0-9]|2[0-9]|3[0-1])[-]([1-9]\b|2[0-9]|3[0-1]))?|([1-9]|1[0-9]|2[0-2]|L)W|(L-([1-9]\b|1[0-9]|2[0-2]))?|(([1-9]\b|1[0-9]|2[0-9]|3[0-1])(?:,([1-9]\b|1[0-9]|2[0-9]|3[0-1]))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)\s([1-9](/[0-9]+)?|1[0-2](/[0-9]+)?|{month}|(([1-9]|1[0-2])[-]([1-9]\b|1[0-2]))?|(({month})[-]({month}))?|(([1-9]|1[0-2])(?:,([1-9]\b|1[0-2]))+)?|({month})(?:,{month})+)?|\*(/[0-9]+)?)\s([0-6](/[0-9]+)?|{weekday}|([0-6][,-][0-6])?|(({weekday})[,-]({weekday}))?|(([0-6]#[1-4])|(({weekday})#[1-4]))?|(([0-6]L)|(({weekday})L))?|(([0-6])(?:,([0-6]))+)?|(({weekday})(?:,({weekday}))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)
4. Месяцы: от 1 до 12       ([1-9](/[0-9]+)?|1[0-2](/[0-9]+)?|{month}|(([1-9]|1[0-2])[-]([1-9]\b|1[0-2]))?|(({month})[-]({month}))?|(([1-9]|1[0-2])(?:,([1-9]\b|1[0-2]))+)?|({month})(?:,{month})+)?|\*(/[0-9]+)?)
5. Дни недели: от 0 до 6    ([0-6](/[0-9]+)?|{weekday}|([0-6][,-][0-6])?|(({weekday})[,-]({weekday}))?|(([0-6]#[1-4])|(({weekday})#[1-4]))?|(([0-6]L)|(({weekday})L))?|(([0-6])(?:,([0-6]))+)?|(({weekday})(?:,({weekday}))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)

Whole regular expression:
r'^([0-9](/[0-9]+)?|[1-5][0-9](/[0-9]+)?|(([0-9]\b|[1-5][0-9])[-]([0-9]\b|[1-5][0-9]))?|(([0-9]\b|[1-5][0-9])(?:,([0-9]\b|[1-5][0-9]))+)?|
\*(/[0-9]+)?)\s([0-9](/[0-9]+)?|1[0-9](/[0-9]+)?|2[0-3](/[0-9]+)?|(([0-9]|1[0-9]|2[0-3])[-]([0-9]\b|1[0-9]|2[0-3]))?|
(([0-9]|1[0-9]|2[0-3])(?:,([0-9]\b|1[0-9]|2[0-3]))+)?|\*(/[0-9]+)?)\s([1-9](/[0-9]+)?|1[0-9](/[0-9]+)?|2[0-9](/[0-9]+)?|
3[0-1](/[0-9]+)?|(([1-9]|1[0-9]|2[0-9]|3[0-1])[-]([1-9]\b|1[0-9]|2[0-9]|3[0-1]))?|([1-9]|1[0-9]|2[0-2]|L)W|(L-([1-9]\b|
1[0-9]|2[0-2]))?|(([1-9]\b|1[0-9]|2[0-9]|3[0-1])(?:,([1-9]\b|1[0-9]|2[0-9]|3[0-1]))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)\s
([1-9](/[0-9]+)?|1[0-2](/[0-9]+)?|{month}|(([1-9]|1[0-2])[-]([1-9]\b|1[0-2]))?|(({month})[-]({month}))?|(([1-9]|1[0-2])
(?:,([1-9]\b|1[0-2]))+)?|(({month})(?:,({month}))+)?|\*(/[0-9]+)?)\s([0-6](/[0-9]+)?|{weekday}|([0-6][,-][0-6])?|
(({weekday})[-]({weekday}))?|(([0-6]#[1-4])|(({weekday})#[1-4]))?|(([0-6]L)|(({weekday})L))?|(([0-6])(?:,([0-6]))+)?
|(({weekday})(?:,({weekday}))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)$'

([0-9](/[0-9]+)?|[1-5][0-9](/[0-9]+)?|(([0-9]\b|[1-5][0-9])[-]([0-9]\b|[1-5][0-9]))?|([0-9]\b|[1-5][0-9])(?:,([0-9]\b|[1-5][0-9]))+|\*(/[0-9]+)?)
([0-9](/[0-9]+)? | [1-5][0-9](/[0-9]+)?|(([0-9]|[1-5][0-9])[-]([0-9]|[1-5][0-9]))?|(([0-9]|[1-5][0-9])(,([0-9]|[1-5][0-9]))+)?|\*(/[0-9]+)?)
'''
import re


def cron(s):
    month = "jan(/[0-9]+)?|feb(/[0-9]+)?|mar(/[0-9]+)?|apr(/[0-9]+)?|may(/[0-9]+)?|jun(/[0-9]+)?|jul(/[0-9]+)?|aug(/[0-9]+)?|sep(/[0-9]+)?|oct(/[0-9]+)?|nov(/[0-9]+)?|dec(/[0-9]+)?"
    weekday = "sun(/[0-9]+)?|mon(/[0-9]+)?|tue(/[0-9]+)?|wed(/[0-9]+)?|thu(/[0-9]+)?|fri(/[0-9]+)?|sat(/[0-9]+)?"
    pattern = fr'^([0-9](/[0-9]+)?|[1-5][0-9](/[0-9]+)?|(([0-9]\b|[1-5][0-9])[-]([0-9]\b|[1-5][0-9]))?|(([0-9]\b|[1-5][0-9])(?:,([0-9]\b|[1-5][0-9]))+)?|\*(/[0-9]+)?)\s([0-9](/[0-9]+)?|1[0-9](/[0-9]+)?|2[0-3](/[0-9]+)?|(([0-9]|1[0-9]|2[0-3])[-]([0-9]\b|1[0-9]|2[0-3]))?|(([0-9]|1[0-9]|2[0-3])(?:,([0-9]\b|1[0-9]|2[0-3]))+)?|\*(/[0-9]+)?)\s([1-9](/[0-9]+)?|1[0-9](/[0-9]+)?|2[0-9](/[0-9]+)?|3[0-1](/[0-9]+)?|(([1-9]|1[0-9]|2[0-9]|3[0-1])[-]([1-9]\b|1[0-9]|2[0-9]|3[0-1]))?|([1-9]|1[0-9]|2[0-2]|L)W|(L-([1-9]\b|1[0-9]|2[0-2]))?|(([1-9]\b|1[0-9]|2[0-9]|3[0-1])(?:,([1-9]\b|1[0-9]|2[0-9]|3[0-1]))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)\s([1-9](/[0-9]+)?|1[0-2](/[0-9]+)?|{month}|(([1-9]|1[0-2])[-]([1-9]\b|1[0-2]))?|(({month})[-]({month}))?|(([1-9]|1[0-2])(?:,([1-9]\b|1[0-2]))+)?|(({month})(?:,({month}))+)?|\*(/[0-9]+)?)\s([0-6](/[0-9]+)?|{weekday}|([0-6][,-][0-6])?|(({weekday})[-]({weekday}))?|(([0-6]#[1-4])|(({weekday})#[1-4]))?|(([0-6]L)|(({weekday})L))?|(([0-6])(?:,([0-6]))+)?|(({weekday})(?:,({weekday}))+)?|\*(/[0-9]+)?|\?(/[0-9]+)?)$'
    month30 = ["apr", "jun", "sen", "nov", "4", "6", "9", "11"]
    after28 = ["29", "30", "31"]
    feb = ["feb", "2"]
    if ((s.split()[3][:3] in feb) + (s.split()[3][-3:] in feb) + (s.split()[3][0] in feb) + (s.split()[3][-1] in feb)) >= 1 \
            and ((s.split()[2][:2] in after28) + (s.split()[2][-2:] in after28)) >= 1 \
            or ((s.split()[3][:3] in month30) + (s.split()[3][-3:] in month30)
                + (s.split()[3][:2] in month30) + (s.split()[3][-2:] in month30)
                + (s.split()[3][0] in month30) + (s.split()[3][-1] in month30)) >= 1 \
                and ((s.split()[2][:2] == "31") + (s.split()[2][-2:] == "31")) >= 1:
        return print("There is no such date in this month!")
    if s == "* * * * *":
        return print("Incorrect cron expression!")
    if re.fullmatch(pattern, s, flags=re.IGNORECASE):
        return print(f"Right format!\ncron expression: {s}")
    return print("Incorrect format!")


def test1():
    print("TEST №1:")
    s = "* * */10 * *"
    cron(s)

def test2():
    print("TEST №2:")
    s = "* * * * *"
    cron(s)

def test3():
    print("TEST №3:")
    s = "0 9-17 * * MON-FRI"
    cron(s)

def test4():
    print("TEST №4:")
    s = "0 0 * * THUL"
    cron(s)

def test5():
    print("TEST №5:")
    s = "0 0 L-1 * *"
    cron(s)


def test6():
    print("TEST №6:")
    s = "0,15,30,45 1,2,3 * * *"
    cron(s)


def test7():
    print("TEST №7:")
    s = "* * * * sun,mon,tue"
    cron(s)


def test8():
    print("TEST №8:")
    s = "0/30 8-10 * * *"
    cron(s)


def test9():
    print("TEST №9:")
    s = "0 0 31 11 ?"
    cron(s)


def test10():
    print("TEST №10:")
    s = "0 0 29 feb */2"
    cron(s)





def test():
    test1()
    test2()
    test3()
    test4()
    test5()
    test6()
    test7()
    test8()
    test9()
    test10()


test()


